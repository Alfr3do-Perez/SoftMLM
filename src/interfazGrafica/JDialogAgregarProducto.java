/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazGrafica;

import DataBase.ConexionDB;
import DataBase.ProcedimientosDAO;
import ObjetosNegocio.Producto;
import ObjetosNegocio.TipoProductos;
import alarmas.*;
import componentes.Utilidades;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author AlfredoPerez
 */
public class JDialogAgregarProducto extends javax.swing.JDialog {

    private Producto producto;
    private List<TipoProductos> listaTipoProductos;
    private ProcedimientosDAO procedimientosDAO;
    private static ResultSet resultSet;
    private File foto = null;
    private int accion= -1;
    private static int respuesta=0;
    
    /**
     * Creates new form NewJDialog
     * @param parent
     * @param modal
     */
    public JDialogAgregarProducto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.initComponents();
        this.producto = new Producto();
        this.accion = Utilidades.AGREGAR;
        this.listaTipoProductos = new ArrayList<>();
        this.procedimientosDAO = new ProcedimientosDAO(ConexionDB.conexion);
        this.llenarComboBoxTipoProductos();
    }
    
    public JDialogAgregarProducto(java.awt.Frame parent, boolean modal, Producto producto, int accion) {
        super(parent, modal);
        this.initComponents();
        this.accion = accion;
        this.producto = producto;
        prepararAccion();
    }
    
    private void prepararAccion(){
        if(accion == Utilidades.OBSERVAR || accion == Utilidades.ELIMINAR){
            if(accion == Utilidades.OBSERVAR){
                this.etiquetaAgregarProducto.setText("Producto ID: "+producto.getID());
                this.botonAceptar.setVisible(false);
                this.botonCancelar.setText("Aceptar");
            }
            else if(accion == Utilidades.ELIMINAR){
                this.procedimientosDAO = new ProcedimientosDAO(ConexionDB.conexion);
                this.etiquetaAgregarProducto.setText("Eliminar Producto ID: "+producto.getID());
                this.etiquetaAgregarProducto.setFont(new java.awt.Font("Segoe UI", 0, 32));
                this.botonAceptar.setText("Eliminar");
            }
            
            this.botonSeleccionarFoto.setVisible(false);
            this.txtNombre.setEditable(false);
            this.comboBoxTipoProducto.setEditable(false);
            this.txtPrecioVenta.setEditable(false);
            this.txtExistencia.setEditable(false);
            this.txtDescripcion.setEditable(false);
            this.comboBoxTipoProducto.removeAllItems();
            this.comboBoxTipoProducto.addItem(producto.getTipoProducto());
            this.comboBoxTipoProducto.setSelectedIndex(0);
        }
        else if(accion == Utilidades.EDITAR){
            this.listaTipoProductos = new ArrayList<>();
            this.procedimientosDAO = new ProcedimientosDAO(ConexionDB.conexion);
            this.txtExistencia.setEditable(false);
            this.llenarComboBoxTipoProductos();
            this.comboBoxTipoProducto.setSelectedItem(producto.getTipoProducto());
            this.etiquetaAgregarProducto.setText("Actualizar Producto ID: "+producto.getID());
            this.etiquetaAgregarProducto.setFont(new java.awt.Font("Segoe UI", 0, 32));
            this.botonAceptar.setText("Actualizar");
        }
        
            BufferedImage imagen;
            if(producto.getFotoProducto() != null){
                try {
                    imagen = ImageIO.read(new ByteArrayInputStream(producto.getFotoProducto()));
                    ImageIcon imagenProducto = new ImageIcon(imagen);
                    fotoProducto.setImagen(imagenProducto);
                } 
                catch (IOException ex) {new AlertaError(null, rootPaneCheckingEnabled, "Error al cargar la imagen :(").setVisible(true);}
            }
            
            this.txtNombre.setText(producto.getNombre());
            this.txtPrecioVenta.setText(String.valueOf(producto.getPrecio()));
            this.txtExistencia.setText(String.valueOf(producto.getExistencia()));
            this.txtDescripcion.setText(producto.getDescripcion());
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelFormulario = new javax.swing.JPanel();
        etiquetaAgregarProducto = new javax.swing.JLabel();
        fotoProducto = new rojerusan.RSPanelImage();
        botonSeleccionarFoto = new componentes.BotonPersonalizado();
        etiquetaNombre = new javax.swing.JLabel();
        etiquetaTipo = new javax.swing.JLabel();
        etiquetaPrecioVenta = new javax.swing.JLabel();
        etiquetaExistencia = new javax.swing.JLabel();
        etiquetaDescripcion = new javax.swing.JLabel();
        panelNombre = new javax.swing.JPanel();
        separadorNombre = new javax.swing.JSeparator();
        txtNombre = new javax.swing.JTextField();
        comboBoxTipoProducto = new javax.swing.JComboBox<>();
        panelPrecioVenta = new javax.swing.JPanel();
        separadorPrecioVenta = new javax.swing.JSeparator();
        txtPrecioVenta = new javax.swing.JTextField();
        panelExistencia = new javax.swing.JPanel();
        separadorExistencia = new javax.swing.JSeparator();
        txtExistencia = new javax.swing.JTextField();
        scrollPanelDescripcion = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        botonAceptar = new componentes.BotonPersonalizado();
        botonCancelar = new componentes.BotonPersonalizado();
        panelFondo1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelFormulario.setBackground(new java.awt.Color(255, 255, 255));
        panelFormulario.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        etiquetaAgregarProducto.setBackground(new java.awt.Color(0, 0, 0));
        etiquetaAgregarProducto.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        etiquetaAgregarProducto.setText("Agregar Producto");
        panelFormulario.add(etiquetaAgregarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, -1));

        fotoProducto.setImagen(new javax.swing.ImageIcon(getClass().getResource("/img/agregarfotoProducto.png"))); // NOI18N

        javax.swing.GroupLayout fotoProductoLayout = new javax.swing.GroupLayout(fotoProducto);
        fotoProducto.setLayout(fotoProductoLayout);
        fotoProductoLayout.setHorizontalGroup(
            fotoProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 239, Short.MAX_VALUE)
        );
        fotoProductoLayout.setVerticalGroup(
            fotoProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 189, Short.MAX_VALUE)
        );

        panelFormulario.add(fotoProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, -1, -1));

        botonSeleccionarFoto.setText("Seleccionar Foto");
        botonSeleccionarFoto.setColorHover(new java.awt.Color(45, 116, 191));
        botonSeleccionarFoto.setColorNormal(new java.awt.Color(58, 103, 201));
        botonSeleccionarFoto.setFocusable(false);
        botonSeleccionarFoto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        botonSeleccionarFoto.setPreferredSize(new java.awt.Dimension(160, 40));
        botonSeleccionarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSeleccionarFotoActionPerformed(evt);
            }
        });
        panelFormulario.add(botonSeleccionarFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 130, 30));

        etiquetaNombre.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        etiquetaNombre.setForeground(new java.awt.Color(153, 153, 153));
        etiquetaNombre.setText("Nombre: ");
        etiquetaNombre.setPreferredSize(new java.awt.Dimension(82, 40));
        panelFormulario.add(etiquetaNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 296, -1, -1));

        etiquetaTipo.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        etiquetaTipo.setForeground(new java.awt.Color(153, 153, 153));
        etiquetaTipo.setText("Tipo: ");
        etiquetaTipo.setPreferredSize(new java.awt.Dimension(48, 40));
        panelFormulario.add(etiquetaTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 352, -1, -1));

        etiquetaPrecioVenta.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        etiquetaPrecioVenta.setForeground(new java.awt.Color(153, 153, 153));
        etiquetaPrecioVenta.setText("Precio venta: ");
        etiquetaPrecioVenta.setPreferredSize(new java.awt.Dimension(116, 40));
        panelFormulario.add(etiquetaPrecioVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 405, -1, -1));

        etiquetaExistencia.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        etiquetaExistencia.setForeground(new java.awt.Color(153, 153, 153));
        etiquetaExistencia.setText("Existencia: ");
        etiquetaExistencia.setPreferredSize(new java.awt.Dimension(93, 40));
        panelFormulario.add(etiquetaExistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 461, -1, -1));

        etiquetaDescripcion.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        etiquetaDescripcion.setForeground(new java.awt.Color(153, 153, 153));
        etiquetaDescripcion.setText("Descripcion: ");
        panelFormulario.add(etiquetaDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 517, -1, -1));

        panelNombre.setBackground(new java.awt.Color(255, 255, 255));
        panelNombre.setForeground(new java.awt.Color(255, 255, 255));
        panelNombre.setPreferredSize(new java.awt.Dimension(250, 45));
        panelNombre.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        separadorNombre.setPreferredSize(new java.awt.Dimension(250, 10));
        panelNombre.add(separadorNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, 10));

        txtNombre.setFont(new java.awt.Font("Arial", 0, 17)); // NOI18N
        txtNombre.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtNombre.setBorder(null);
        txtNombre.setPreferredSize(new java.awt.Dimension(250, 20));
        txtNombre.setBorder(BorderFactory.createEmptyBorder(0, 6, 0, 6));
        panelNombre.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));

        panelFormulario.add(panelNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 296, 266, -1));

        comboBoxTipoProducto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        comboBoxTipoProducto.setMaximumRowCount(10);
        comboBoxTipoProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar el tipo del producto" }));
        comboBoxTipoProducto.setToolTipText("");
        comboBoxTipoProducto.setPreferredSize(new java.awt.Dimension(250, 35));
        panelFormulario.add(comboBoxTipoProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 359, -1, -1));

        panelPrecioVenta.setBackground(new java.awt.Color(255, 255, 255));
        panelPrecioVenta.setForeground(new java.awt.Color(255, 255, 255));
        panelPrecioVenta.setPreferredSize(new java.awt.Dimension(250, 45));
        panelPrecioVenta.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        separadorPrecioVenta.setPreferredSize(new java.awt.Dimension(250, 10));
        panelPrecioVenta.add(separadorPrecioVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, 10));

        txtPrecioVenta.setFont(new java.awt.Font("Arial", 0, 17)); // NOI18N
        txtPrecioVenta.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPrecioVenta.setBorder(null);
        txtPrecioVenta.setPreferredSize(new java.awt.Dimension(250, 20));
        txtNombre.setBorder(BorderFactory.createEmptyBorder(0, 6, 0, 6));
        panelPrecioVenta.add(txtPrecioVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));

        panelFormulario.add(panelPrecioVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 405, 266, -1));

        panelExistencia.setBackground(new java.awt.Color(255, 255, 255));
        panelExistencia.setForeground(new java.awt.Color(255, 255, 255));
        panelExistencia.setPreferredSize(new java.awt.Dimension(250, 45));
        panelExistencia.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        separadorExistencia.setPreferredSize(new java.awt.Dimension(250, 10));
        panelExistencia.add(separadorExistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, 10));

        txtExistencia.setFont(new java.awt.Font("Arial", 0, 17)); // NOI18N
        txtExistencia.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtExistencia.setBorder(null);
        txtExistencia.setPreferredSize(new java.awt.Dimension(250, 20));
        txtNombre.setBorder(BorderFactory.createEmptyBorder(0, 6, 0, 6));
        txtExistencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtExistenciaMousePressed(evt);
            }
        });
        panelExistencia.add(txtExistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));

        panelFormulario.add(panelExistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 461, 266, -1));

        scrollPanelDescripcion.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        scrollPanelDescripcion.setPreferredSize(new java.awt.Dimension(250, 96));

        txtDescripcion.setColumns(20);
        txtDescripcion.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        txtDescripcion.setRows(5);
        scrollPanelDescripcion.setViewportView(txtDescripcion);

        panelFormulario.add(scrollPanelDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 517, -1, -1));

        botonAceptar.setText("Aceptar");
        botonAceptar.setColorHover(new java.awt.Color(45, 116, 191));
        botonAceptar.setColorNormal(new java.awt.Color(58, 103, 201));
        botonAceptar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        botonAceptar.setPreferredSize(new java.awt.Dimension(160, 40));
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });
        panelFormulario.add(botonAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 646, 115, 30));

        botonCancelar.setText("Cancelar");
        botonCancelar.setColorHover(new java.awt.Color(45, 116, 191));
        botonCancelar.setColorNormal(new java.awt.Color(58, 103, 201));
        botonCancelar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        botonCancelar.setPreferredSize(new java.awt.Dimension(160, 40));
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });
        panelFormulario.add(botonCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(319, 646, 115, 30));

        getContentPane().add(panelFormulario, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 510, 750));

        panelFondo1.setBackground(new java.awt.Color(29, 48, 107));
        panelFondo1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(panelFondo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 800));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonSeleccionarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSeleccionarFotoActionPerformed
        foto = seleccionarArchivo();
        if(foto != null){
            fotoProducto.setImagen(new javax.swing.ImageIcon(foto.getPath()));
        }
    }//GEN-LAST:event_botonSeleccionarFotoActionPerformed

    private File seleccionarArchivo()
    {
        JFileChooser selectorArchivos = new JFileChooser();
        
        selectorArchivos.setFileFilter(new FileNameExtensionFilter(".png", "png",".jpg","jpg"));
        
        int opcion = selectorArchivos.showOpenDialog(this);
        
        if(opcion ==JFileChooser.APPROVE_OPTION)
        {
            File archivo = selectorArchivos.getSelectedFile();
            String url=archivo.getAbsolutePath();
            String extencion = url.substring(url.indexOf('.'), (url.length()));
            if(extencion.equals(".jpg")||extencion.equals(".png")){
                return archivo;
            }else{new AlertaError(null, rootPaneCheckingEnabled, "Extencion incorrecta\n solo se aceptan .jpg o .png").setVisible(true);return null;}
        }else{return null;}
    }
    
    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
        if(accion == Utilidades.AGREGAR || accion == Utilidades.EDITAR){
            if(validarDatosProducto()){
               try {
                   byte[] arregloImagen = null;
                   if(foto != null){
                       arregloImagen = Files.readAllBytes(foto.toPath());
                   }
                   else if(producto.getFotoProducto() != null){
                       arregloImagen = producto.getFotoProducto();
                   }
                       producto.setNombre(txtNombre.getText());
                       producto.setTipoProductoID(listaTipoProductos.get(comboBoxTipoProducto.getSelectedIndex()-1).getID());
                       producto.setPrecio(Double.valueOf(txtPrecioVenta.getText()));
                       producto.setExistencia(Integer.valueOf(txtExistencia.getText()));
                       producto.setDescripcion(txtDescripcion.getText());
                       producto.setFotoProducto(arregloImagen);

                    if(accion == Utilidades.AGREGAR){procedimientosDAO.agregarProducto(producto);}
                    else if(accion == Utilidades.EDITAR){procedimientosDAO.actualizarProducto(producto);}


                    dispose();
                } catch (SQLException ex) {
                    new AlertaError(null, rootPaneCheckingEnabled, "Algo salio mal al conectarse con la base de datos :(").setVisible(true);
                } catch (IOException ex) {
                    new AlertaError(null, rootPaneCheckingEnabled, "Algo salio mal al convertir el archivo :(").setVisible(true);
                }
            }
            else{
                new AlertaError(null, rootPaneCheckingEnabled, "No puede haber campos vacios!").setVisible(true);
            }
        }
        else if(accion == Utilidades.ELIMINAR){
            AlertaAdvertencia alertaWarning = new AlertaAdvertencia(null, rootPaneCheckingEnabled, "Esta seguro que desea eliminar el producto?");
            alertaWarning.setVisible(true);
            if(alertaWarning.getRespuesta() == 1){
                try {
                    procedimientosDAO.eliminarProducto(producto);
                    new AlertaExitosa(null, rootPaneCheckingEnabled, "El producto se elimino correcatmente!").setVisible(true);
                    this.dispose();
                } catch (SQLException ex) {
                    new AlertaError(null, rootPaneCheckingEnabled, "Algo salio mal al conectarse con la base de datos :(").setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_botonAceptarActionPerformed

    private Boolean validarDatosProducto(){
        return !(txtNombre.getText().isEmpty() || comboBoxTipoProducto.getSelectedItem().toString().equals("Seleccionar el tipo del producto") ||txtPrecioVenta.getText().isEmpty() || txtExistencia.getText().isEmpty() || txtDescripcion.getText().isEmpty());
    }
    
    private void llenarComboBoxTipoProductos(){
        String sql = "SELECT * FROM soft_mlmbd.tipoproducto;";
        
        try {
            resultSet = procedimientosDAO.ejecututarQuery(sql);
            while(resultSet.next()){
                Object[] datos = new Object[2];
                datos[0] = resultSet.getInt(1);
                datos[1] = resultSet.getString(2);
                
                comboBoxTipoProducto.addItem(datos[1].toString());
                listaTipoProductos.add(new TipoProductos((int) datos[0], (String) datos[1]));
            }
           
        } catch (SQLException ex) {
            new AlertaError(null, rootPaneCheckingEnabled, "Algo salio mal al conectarse con la base de datos :(").setVisible(true);
        }
        
        
    }
    
    
    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void txtExistenciaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtExistenciaMousePressed
       if(accion == Utilidades.EDITAR && !txtExistencia.isEditable()){
            AlertaAdvertencia alertaEditarExistencia = new AlertaAdvertencia(null, rootPaneCheckingEnabled, "Esta seguro que desea editar la existencia?");
            alertaEditarExistencia.setVisible(true);
            if(alertaEditarExistencia.getRespuesta() == 1){
                txtExistencia.setEditable(true);
            }
        }
    }//GEN-LAST:event_txtExistenciaMousePressed

    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private componentes.BotonPersonalizado botonAceptar;
    private componentes.BotonPersonalizado botonCancelar;
    private componentes.BotonPersonalizado botonSeleccionarFoto;
    private javax.swing.JComboBox<String> comboBoxTipoProducto;
    private javax.swing.JLabel etiquetaAgregarProducto;
    private javax.swing.JLabel etiquetaDescripcion;
    private javax.swing.JLabel etiquetaExistencia;
    private javax.swing.JLabel etiquetaNombre;
    private javax.swing.JLabel etiquetaPrecioVenta;
    private javax.swing.JLabel etiquetaTipo;
    private rojerusan.RSPanelImage fotoProducto;
    private javax.swing.JPanel panelExistencia;
    private javax.swing.JPanel panelFondo1;
    private javax.swing.JPanel panelFormulario;
    private javax.swing.JPanel panelNombre;
    private javax.swing.JPanel panelPrecioVenta;
    private javax.swing.JScrollPane scrollPanelDescripcion;
    private javax.swing.JSeparator separadorExistencia;
    private javax.swing.JSeparator separadorNombre;
    private javax.swing.JSeparator separadorPrecioVenta;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtExistencia;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecioVenta;
    // End of variables declaration//GEN-END:variables
}
