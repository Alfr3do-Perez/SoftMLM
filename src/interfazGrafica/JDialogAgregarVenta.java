/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazGrafica;

import DataBase.ConexionDB;
import DataBase.ProcedimientosDAO;
import ObjetosNegocio.DetallesVenta;
import ObjetosNegocio.Producto;
import ObjetosNegocio.ProductoCarro;
import ObjetosNegocio.Venta;
import alarmas.*;
import componentes.GestionCeldas;
import componentes.GestionEncabezadoTabla;
import componentes.ModeloTabla;
import componentes.ModeloTablaProductosVenta;
import componentes.Utilidades;
import java.awt.Color;
import java.awt.Cursor;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author AlfredoPerez
 */
public class JDialogAgregarVenta extends javax.swing.JDialog {

    private final List<Producto> listaProductos;
    private final List<ProductoCarro> listaCarritoCompra;
    private ResultSet resultSet;
    private final ProcedimientosDAO procedimientosDAO;
    private int fila,columna = -1;
    private Venta venta;
    private boolean isVisible = false;
    private double subtotal;
    private double iva;
    private double precioTotal;
    
    /**
     * Creates new form JDialogAgregarVenta
     * @param parent
     * @param modal
     * @param listaProductos
     */
    public JDialogAgregarVenta(java.awt.Frame parent, boolean modal, List<Producto> listaProductos) {
        super(parent, modal);
        this.initComponents();
        this.actualizarTablaProductos();
        this.listaCarritoCompra = new ArrayList<>();
        this.listaProductos = listaProductos;
        this.procedimientosDAO = new ProcedimientosDAO(ConexionDB.conexion);
    }
    
    public JDialogAgregarVenta(java.awt.Frame parent, boolean modal, Venta venta) {
        super(parent, modal);
        this.initComponents();
        this.panelAgregarProducto.setVisible(false);
        this.venta = venta;
        this.setVisibleEtiquetas(true);
        this.actualizarTablaVenta();
        this.listaCarritoCompra = new ArrayList<>();
        this.listaProductos = new ArrayList<>();
        this.procedimientosDAO = new ProcedimientosDAO(ConexionDB.conexion);
        this.llenarTablaVenta();
    }
    
    private void setVisibleEtiquetas(boolean isVisible){
        this.etiquetaTitulo.setText("MOSTRAR VENTA");
        this.panelDatosVenta.setVisible(isVisible);
        this.botonAgregar.setVisible(false);
        
        this.etiquetaSubtotal.setVisible(isVisible);
        this.txtPrecioSubtotal.setVisible(isVisible);
        this.etiquetaIva.setVisible(isVisible);
        this.txtIva.setVisible(isVisible);
        this.etiquetaTotal.setVisible(isVisible);
        this.txtPrecioTotal.setVisible(isVisible);
        
        
        this.txtID.setText(String.valueOf(venta.getID()));
        this.txtFecha.setText(String.valueOf(venta.getFechaVenta()));
        this.txtEmpleado.setText(venta.getNombreEmpleado());
        this.txtPrecioSubtotal.setText("$ "+String.valueOf(venta.getSubtotal()));
        this.txtIva.setText("$ "+String.valueOf(venta.getIva()));
        this.txtPrecioTotal.setText("$ "+String.valueOf(venta.getPrecioTotal()));
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panleFondo = new javax.swing.JPanel();
        panelContenido = new javax.swing.JPanel();
        botonSalir = new componentes.BotonPersonalizado();
        scrollPaneTablaCatalago = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        panelAgregarProducto = new javax.swing.JPanel();
        fotoAgregarProducto = new rojerusan.RSPanelImage();
        etiquetaAgregarProducto = new javax.swing.JLabel();
        botonAgregar = new javax.swing.JButton();
        txtPrecioSubtotal = new javax.swing.JLabel();
        etiquetaSubtotal = new javax.swing.JLabel();
        panelDatosVenta = new javax.swing.JPanel();
        etiquetaID = new javax.swing.JLabel();
        etiquetaFecha = new javax.swing.JLabel();
        etiquetaEmpleado = new javax.swing.JLabel();
        txtID = new javax.swing.JLabel();
        txtFecha = new javax.swing.JLabel();
        txtEmpleado = new javax.swing.JLabel();
        etiquetaIva = new javax.swing.JLabel();
        txtIva = new javax.swing.JLabel();
        etiquetaTotal = new javax.swing.JLabel();
        txtPrecioTotal = new javax.swing.JLabel();
        panelFondoTitulo = new javax.swing.JPanel();
        etiquetaTitulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panleFondo.setBackground(new java.awt.Color(204, 204, 204));
        panleFondo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panleFondoMousePressed(evt);
            }
        });
        panleFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelContenido.setBackground(new java.awt.Color(255, 255, 255));
        panelContenido.setPreferredSize(new java.awt.Dimension(920, 530));
        panelContenido.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botonSalir.setText("Salir");
        botonSalir.setColorHover(new java.awt.Color(45, 116, 191));
        botonSalir.setColorNormal(new java.awt.Color(58, 103, 201));
        botonSalir.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        botonSalir.setPreferredSize(new java.awt.Dimension(160, 40));
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });
        panelContenido.add(botonSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 500, -1, -1));

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaProductos.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tablaProductosMouseMoved(evt);
            }
        });
        tablaProductos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tablaProductosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tablaProductosFocusLost(evt);
            }
        });
        tablaProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaProductosMousePressed(evt);
            }
        });
        scrollPaneTablaCatalago.setViewportView(tablaProductos);

        panelContenido.add(scrollPaneTablaCatalago, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 870, 360));

        panelAgregarProducto.setBackground(new java.awt.Color(159, 249, 189));
        panelAgregarProducto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        panelAgregarProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelAgregarProductoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panelAgregarProductoMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelAgregarProductoMousePressed(evt);
            }
        });
        panelAgregarProducto.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fotoAgregarProducto.setImagen(new javax.swing.ImageIcon(getClass().getResource("/img/administrarCatalago-mas.png"))); // NOI18N
        fotoAgregarProducto.setPreferredSize(new java.awt.Dimension(30, 30));
        fotoAgregarProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fotoAgregarProductoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fotoAgregarProductoMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                fotoAgregarProductoMousePressed(evt);
            }
        });

        javax.swing.GroupLayout fotoAgregarProductoLayout = new javax.swing.GroupLayout(fotoAgregarProducto);
        fotoAgregarProducto.setLayout(fotoAgregarProductoLayout);
        fotoAgregarProductoLayout.setHorizontalGroup(
            fotoAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        fotoAgregarProductoLayout.setVerticalGroup(
            fotoAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        panelAgregarProducto.add(fotoAgregarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        etiquetaAgregarProducto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        etiquetaAgregarProducto.setText("Agregar Producto");
        etiquetaAgregarProducto.setPreferredSize(new java.awt.Dimension(124, 35));
        etiquetaAgregarProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                etiquetaAgregarProductoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                etiquetaAgregarProductoMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                etiquetaAgregarProductoMousePressed(evt);
            }
        });
        panelAgregarProducto.add(etiquetaAgregarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 7, -1, -1));

        panelContenido.add(panelAgregarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 200, 50));

        botonAgregar.setBackground(new java.awt.Color(0, 204, 51));
        botonAgregar.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        botonAgregar.setForeground(new java.awt.Color(255, 255, 255));
        botonAgregar.setText("Agregar");
        botonAgregar.setBorderPainted(false);
        botonAgregar.setContentAreaFilled(false);
        botonAgregar.setOpaque(true);
        botonAgregar.setPreferredSize(new java.awt.Dimension(160, 40));
        botonAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonAgregarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonAgregarMouseExited(evt);
            }
        });
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });
        panelContenido.add(botonAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 500, -1, -1));

        txtPrecioSubtotal.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        txtPrecioSubtotal.setPreferredSize(new java.awt.Dimension(150, 30));
        txtPrecioSubtotal.setVisible(false);
        panelContenido.add(txtPrecioSubtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, -1, -1));

        etiquetaSubtotal.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        etiquetaSubtotal.setText("Subtotal: ");
        etiquetaSubtotal.setPreferredSize(new java.awt.Dimension(120, 30));
        etiquetaSubtotal.setVisible(false);
        panelContenido.add(etiquetaSubtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, -1, -1));

        panelDatosVenta.setBackground(new java.awt.Color(58, 103, 201));

        etiquetaID.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        etiquetaID.setForeground(new java.awt.Color(230, 234, 234));
        etiquetaID.setText("ID:");

        etiquetaFecha.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaFecha.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        etiquetaFecha.setForeground(new java.awt.Color(230, 234, 234));
        etiquetaFecha.setText("Fecha:");

        etiquetaEmpleado.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaEmpleado.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        etiquetaEmpleado.setForeground(new java.awt.Color(230, 234, 234));
        etiquetaEmpleado.setText("Empleado:");

        txtID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtID.setForeground(new java.awt.Color(255, 255, 255));
        txtID.setPreferredSize(new java.awt.Dimension(140, 25));

        txtFecha.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtFecha.setForeground(new java.awt.Color(255, 255, 255));
        txtFecha.setPreferredSize(new java.awt.Dimension(140, 25));

        txtEmpleado.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtEmpleado.setForeground(new java.awt.Color(255, 255, 255));
        txtEmpleado.setPreferredSize(new java.awt.Dimension(200, 25));

        javax.swing.GroupLayout panelDatosVentaLayout = new javax.swing.GroupLayout(panelDatosVenta);
        panelDatosVenta.setLayout(panelDatosVentaLayout);
        panelDatosVentaLayout.setHorizontalGroup(
            panelDatosVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosVentaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelDatosVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(etiquetaID)
                    .addComponent(etiquetaFecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(etiquetaEmpleado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelDatosVentaLayout.setVerticalGroup(
            panelDatosVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosVentaLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(panelDatosVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(etiquetaID)
                        .addComponent(txtEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(etiquetaEmpleado, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiquetaFecha)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        panelDatosVenta.setVisible(false);

        panelContenido.add(panelDatosVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 530, 100));

        etiquetaIva.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        etiquetaIva.setText("IVA (16%): ");
        etiquetaIva.setPreferredSize(new java.awt.Dimension(120, 30));
        etiquetaIva.setVisible(false);
        panelContenido.add(etiquetaIva, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 45, -1, -1));

        txtIva.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        txtIva.setPreferredSize(new java.awt.Dimension(150, 30));
        txtIva.setVisible(false);
        panelContenido.add(txtIva, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 45, -1, -1));

        etiquetaTotal.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        etiquetaTotal.setText("Total: ");
        etiquetaTotal.setPreferredSize(new java.awt.Dimension(120, 30));
        etiquetaTotal.setVisible(false);
        panelContenido.add(etiquetaTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 80, -1, -1));

        txtPrecioTotal.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        txtPrecioTotal.setPreferredSize(new java.awt.Dimension(150, 30));
        txtPrecioTotal.setVisible(false);
        panelContenido.add(txtPrecioTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 80, -1, -1));

        panleFondo.add(panelContenido, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, 570));

        panelFondoTitulo.setBackground(new java.awt.Color(255, 255, 255));
        panelFondoTitulo.setPreferredSize(new java.awt.Dimension(980, 50));
        panelFondoTitulo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        etiquetaTitulo.setBackground(new java.awt.Color(0, 0, 0));
        etiquetaTitulo.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        etiquetaTitulo.setText("AGREGAR VENTA");
        panelFondoTitulo.add(etiquetaTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        panleFondo.add(panelFondoTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(panleFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 680));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        listaCarritoCompra.forEach((productoCarro1) -> {
            productoCarro1.getProducto().setExistencia(productoCarro1.getProducto().getExistencia()+productoCarro1.getCantidad());
        });
        this.dispose();
    }//GEN-LAST:event_botonSalirActionPerformed

    private void accionAgregarProductoMousePressed(){
        JDialogMostrarProductos agregarProducto = new JDialogMostrarProductos(null, rootPaneCheckingEnabled, listaProductos);
        agregarProducto.setVisible(true);
        
        Producto producto = agregarProducto.getProducto();
        boolean contine= false;
        if(producto!=null){
            for(int cont=0;cont < listaCarritoCompra.size() ;cont++){
                if(listaCarritoCompra.get(cont).getProducto().equals(producto)){
                    listaCarritoCompra.get(cont).setCantidad(listaCarritoCompra.get(cont).getCantidad()+(int)agregarProducto.getTxtCantidad().getValue());
                    contine = true;
                }
            }
            if(contine == false){
                ProductoCarro productoCarro = new ProductoCarro(producto, (int)agregarProducto.getTxtCantidad().getValue());
                listaCarritoCompra.add(productoCarro);
            }
            llenarTablaProductos();
        }
        
    }
    
    private void calcularSubtotal(){
        this.subtotal = 0;
        this.etiquetaSubtotal.setVisible(true);
        this.txtPrecioSubtotal.setVisible(true);
        for(int cont=0;cont < listaCarritoCompra.size();cont++){
            subtotal = subtotal + (listaCarritoCompra.get(cont).getProducto().getPrecio() * listaCarritoCompra.get(cont).getCantidad());
        }
        this.txtPrecioSubtotal.setText("$ "+subtotal);
    }
    
    private void calcularIva(){
        this.iva = 0;
        this.etiquetaIva.setVisible(true);
        this.txtIva.setVisible(true);
        this.iva = ((subtotal *16)/100);
        this.txtIva.setText("$ "+iva);
    }
    
    private void calcularPrecioTotal(){
        this.precioTotal = 0;
        this.etiquetaTotal.setVisible(true);
        this.txtPrecioTotal.setVisible(true);
        this.precioTotal = (subtotal + iva);
        this.txtPrecioTotal.setText("$ "+precioTotal);
    }
    
    private void actualizarPrecioCarrito(){
        if(!listaCarritoCompra.isEmpty()){
            this.calcularSubtotal();
            this.calcularIva();
            this.calcularPrecioTotal();
        }
    }
    
    private void fotoAgregarProductoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fotoAgregarProductoMouseEntered
        panelAgregarProducto.setBackground(new Color(63, 254, 127));
    }//GEN-LAST:event_fotoAgregarProductoMouseEntered

    private void fotoAgregarProductoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fotoAgregarProductoMouseExited
        panelAgregarProducto.setBackground(new Color(159,249,189));
    }//GEN-LAST:event_fotoAgregarProductoMouseExited

    private void fotoAgregarProductoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fotoAgregarProductoMousePressed
        this.accionAgregarProductoMousePressed();
    }//GEN-LAST:event_fotoAgregarProductoMousePressed

    private void etiquetaAgregarProductoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_etiquetaAgregarProductoMouseEntered
        panelAgregarProducto.setBackground(new Color(63, 254, 127));
    }//GEN-LAST:event_etiquetaAgregarProductoMouseEntered

    private void etiquetaAgregarProductoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_etiquetaAgregarProductoMouseExited
        panelAgregarProducto.setBackground(new Color(159,249,189));
    }//GEN-LAST:event_etiquetaAgregarProductoMouseExited

    private void etiquetaAgregarProductoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_etiquetaAgregarProductoMousePressed
        this.accionAgregarProductoMousePressed();
    }//GEN-LAST:event_etiquetaAgregarProductoMousePressed

    private void panelAgregarProductoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelAgregarProductoMouseEntered
        panelAgregarProducto.setBackground(new Color(63, 254, 127));
    }//GEN-LAST:event_panelAgregarProductoMouseEntered

    private void panelAgregarProductoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelAgregarProductoMouseExited
        panelAgregarProducto.setBackground(new Color(159,249,189));
    }//GEN-LAST:event_panelAgregarProductoMouseExited

    private void panelAgregarProductoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelAgregarProductoMousePressed
        this.accionAgregarProductoMousePressed();
    }//GEN-LAST:event_panelAgregarProductoMousePressed

    private void tablaProductosMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProductosMouseMoved
        int columna2 = tablaProductos.columnAtPoint(evt.getPoint());
        if(columna2 == 0 || columna2 == 1 || columna2 == 2 || columna2 == 3){tablaProductos.setCursor(new Cursor(Cursor.HAND_CURSOR));}
        else{tablaProductos.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));}
    }//GEN-LAST:event_tablaProductosMouseMoved

    private void tablaProductosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProductosMousePressed
        int filaAux = tablaProductos.rowAtPoint(evt.getPoint());
        int columnaAux = tablaProductos.columnAtPoint(evt.getPoint());
        
        switch (columnaAux){
            case Utilidades.AGREGAR_VENTA_ELIMINAR:
                opcionEliminarVenta(filaAux);
                break;
            case Utilidades.AGREGAR_VENTA_MAS:
                opcionMasVenta(filaAux);
                break;
            case Utilidades.AGREGAR_VENTA_MENOS:
                opcionMenosVenta(filaAux);
                break;
            default:
                break;
        }
    }//GEN-LAST:event_tablaProductosMousePressed

    private boolean opcionEliminarVenta(int fila){
        AlertaAdvertencia alertWarning = new AlertaAdvertencia(null, rootPaneCheckingEnabled, "Seguro que quiere eliminar el producto de la venta?");
        alertWarning.setVisible(true);
        if(alertWarning.getRespuesta() == 1){
            for(int cont = 0; cont < listaProductos.size(); cont++){
                if(listaProductos.get(cont).equals(listaCarritoCompra.get(fila).getProducto())){
                    listaProductos.get(cont).setExistencia(listaProductos.get(cont).getExistencia()+listaCarritoCompra.get(fila).getCantidad());
                    listaCarritoCompra.remove(fila);
                    llenarTablaProductos();
                    new AlertaExitosa(null, rootPaneCheckingEnabled, "Se elimino el producto de la venta correctamente!").setVisible(true);
                    return true;
                }
            }
        }
        return false;
    }
    
    private void opcionMasVenta(int fila){
        int cantidad = (int) tablaProductos.getValueAt(fila,Utilidades.AGREGAR_VENTA_CANTIDAD)+1;
        if(cantidad >0 && listaCarritoCompra.get(fila).getProducto().getExistencia() > 0){
            listaCarritoCompra.get(fila).setCantidad(cantidad);
            listaCarritoCompra.get(fila).getProducto().setExistencia(listaCarritoCompra.get(fila).getProducto().getExistencia()-1);
            llenarTablaProductos();
        }
    }
    
    private void opcionMenosVenta(int fila){
        int cantidad = (int) tablaProductos.getValueAt(fila,Utilidades.AGREGAR_VENTA_CANTIDAD)-1;
        if(cantidad >0 && listaCarritoCompra.get(fila).getProducto().getExistencia() >= 0){
            listaCarritoCompra.get(fila).setCantidad(cantidad);
            listaCarritoCompra.get(fila).getProducto().setExistencia(listaCarritoCompra.get(fila).getProducto().getExistencia()+1);
            llenarTablaProductos();
        }
    }
    
    private void panleFondoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panleFondoMousePressed
      tablaProductos.clearSelection();
    }//GEN-LAST:event_panleFondoMousePressed

    private void tablaProductosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tablaProductosFocusGained
       if(fila != -1 && columna != -1){
           int valorModificado = (int)tablaProductos.getValueAt(fila, columna);
           if(valorModificado > 0 && valorModificado <= (listaCarritoCompra.get(fila).getProducto().getExistencia()+listaCarritoCompra.get(fila).getCantidad())){
              int diferencia = listaCarritoCompra.get(fila).getCantidad()-valorModificado;
              this.listaCarritoCompra.get(fila).setCantidad(valorModificado);
              this.listaCarritoCompra.get(fila).getProducto().setExistencia((listaCarritoCompra.get(fila).getProducto().getExistencia()+diferencia));
              this.llenarTablaProductos();
           }
           else{
               this.tablaProductos.setValueAt(listaCarritoCompra.get(fila).getCantidad(), fila, columna);
           }
           this.fila = -1;
           this.columna = -1;
        }
    }//GEN-LAST:event_tablaProductosFocusGained

    private void tablaProductosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tablaProductosFocusLost
        if(tablaProductos.getSelectedRow() != -1 && tablaProductos.getSelectedColumn() != -1){
            if(tablaProductos.getSelectedColumn() == 2){
                this.fila = tablaProductos.getSelectedRow();
                this.columna = tablaProductos.getSelectedColumn();
            }
        }
    }//GEN-LAST:event_tablaProductosFocusLost

    private void botonAgregarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAgregarMouseEntered
        botonAgregar.setBackground(new Color(51,255,0));
    }//GEN-LAST:event_botonAgregarMouseEntered

    private void botonAgregarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAgregarMouseExited
        botonAgregar.setBackground(new Color(0,204,51));
    }//GEN-LAST:event_botonAgregarMouseExited

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
     if(!listaCarritoCompra.isEmpty()){  
        Calendar fecha = new GregorianCalendar();
        Date fechaSQL = new Date(fecha.getTimeInMillis());
        int idVenta = obtenerIdVentaMax()+1;
        Venta ventaAux = new Venta(idVenta, fechaSQL, Utilidades.ID_EMPLEADO, subtotal, iva, precioTotal);
        
        List<DetallesVenta> listaDetallesVenta;
        listaDetallesVenta = new ArrayList<>();
        
        List<Producto> listaProductosAcualizar;
        listaProductosAcualizar = new ArrayList<>();
        
        for(int cont=0; cont < listaCarritoCompra.size() ; cont++){
            DetallesVenta detallesVentaAux = new DetallesVenta(idVenta, listaCarritoCompra.get(cont).getCantidad(), listaCarritoCompra.get(cont).getProducto().getID());
            listaDetallesVenta.add(detallesVentaAux);
            
            listaProductosAcualizar.add(listaCarritoCompra.get(cont).getProducto());
        }
        
        try {
            procedimientosDAO.agregarVenta(ventaAux);
            for(int cont=0; cont < listaDetallesVenta.size() ;cont++){
                procedimientosDAO.agregarDetalleVenta(listaDetallesVenta.get(cont));
                procedimientosDAO.actualizarProducto(listaProductosAcualizar.get(cont));
            }
            new AlertaExitosa(null, rootPaneCheckingEnabled, "La venta se agrego correctamente!").setVisible(true);
            
            AlertaAdvertencia alertaAdvertencia = new AlertaAdvertencia(null, true, "Desea generar factura?");
            alertaAdvertencia.setVisible(true);
            if(alertaAdvertencia.getRespuesta() == 1){
                crearFactura(ventaAux.getID());
                this.dispose();
            }else{
            this.dispose();}
        } catch (SQLException ex) {
            new AlertaError(null, rootPaneCheckingEnabled, "Algo salio mal al conectarse con la base de datos :(").setVisible(true);
        }
     }else{new AlertaError(null, rootPaneCheckingEnabled, "El carrito esta vacio :(").setVisible(true);}
    }//GEN-LAST:event_botonAgregarActionPerformed

    private void crearFactura(int id_venta){
        try {
             JasperReport facturaReport = null;
             
             Map parametro = new HashMap();
             parametro.put("id_venta", id_venta);
             
             facturaReport = (JasperReport) JRLoader.loadObjectFromFile(ProcedimientosDAO.reporte);
            
             JasperPrint jprint = JasperFillManager.fillReport(facturaReport, parametro,ConexionDB.conexion);
            
            
             JasperViewer viewer = new JasperViewer(jprint, false);
             viewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
             viewer.setVisible(true);
        } catch (JRException ex) {
            new AlertaError(null, rootPaneCheckingEnabled, "Algo salio mal al conectarse con la base de datos :(").setVisible(true);
        }
    }
    
    private int obtenerIdVentaMax(){
        String sql = "CALL sp_obtenerIDVentaMax();";
        try {
            resultSet = procedimientosDAO.ejecututarQuery(sql);
            while(resultSet.next()){
                return resultSet.getInt(1);
            }
           
        } catch (SQLException ex) {
            new AlertaError(null, rootPaneCheckingEnabled, "Algo salio mal al conectarse con la base de datos :(").setVisible(true);
        }
        return 0;
    }
    
    public void clearTable(JTable tabla) {
        
        while(tabla.getRowCount() > 0){
            ((DefaultTableModel) tabla.getModel()).removeRow(0);
        }
    }
    
    private void llenarTablaProductos(){
        clearTable(tablaProductos);
        
        DefaultTableModel tablaModelo = (DefaultTableModel) tablaProductos.getModel();
        
        
        tablaProductos.getColumnModel().getColumn(0).setResizable(false);
        tablaProductos.getColumnModel().getColumn(1).setResizable(false);
        tablaProductos.getColumnModel().getColumn(2).setResizable(false);
        tablaProductos.getColumnModel().getColumn(3).setResizable(false);
        tablaProductos.getColumnModel().getColumn(4).setResizable(false);
        tablaProductos.getColumnModel().getColumn(5).setResizable(false);
        tablaProductos.getColumnModel().getColumn(6).setResizable(false);
        tablaProductos.getColumnModel().getColumn(7).setResizable(false);
        tablaProductos.getColumnModel().getColumn(8).setResizable(false);
        tablaProductos.getColumnModel().getColumn(9).setResizable(false);
        
       
        for (ProductoCarro producto : listaCarritoCompra) {
            Object[] datos = new Object[10];
            datos[0] = "OBSERVAR";
            datos[1] = "ELIMINAR";
            datos[2] = producto.getCantidad();
            datos[3] = "MAS";
            datos[4] = "MENOS";
            datos[5] = producto.getProducto().getID();
            datos[6] = producto.getProducto().getNombre();
            datos[7] = producto.getProducto().getTipoProducto();
            datos[8] = producto.getProducto().getPrecio();
            datos[9] = producto.getProducto().getExistencia();
            
            tablaModelo.addRow(datos);
        }
        
        actualizarPrecioCarrito();
        
    }
    
    
    private void actualizarTablaProductos() {
        
        String[] titulos = new String[10];
        titulos[0] = "";
        titulos[1] = "";
        titulos[2] = "Cantidad";
        titulos[3] = "";
        titulos[4] = "";
        titulos[5] = "ID";
        titulos[6] = "Nombre";
        titulos[7] = "Tipo Producto";
        titulos[8] = "Precio Venta";
        titulos[9] = "Existencia";
        
        
        ModeloTablaProductosVenta tabla = new ModeloTablaProductosVenta(titulos);
        tablaProductos.setModel(tabla);
        tablaProductos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        

        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_OBSERVAR).setCellRenderer(new GestionCeldas("icono"));
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_ELIMINAR).setCellRenderer(new GestionCeldas("icono"));
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_CANTIDAD).setCellRenderer(new GestionCeldas("numericoINT"));
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_MAS).setCellRenderer(new GestionCeldas("icono"));
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_MENOS).setCellRenderer(new GestionCeldas("icono"));
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_ID).setCellRenderer(new GestionCeldas("numericoINT"));
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_NOMBRE).setCellRenderer(new GestionCeldas("texto"));
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_TIPO_PRODUCTO).setCellRenderer(new GestionCeldas("texto"));
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_PRECIO_VENTA).setCellRenderer(new GestionCeldas("numericoDOUBLE"));
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_EXISTENCIA).setCellRenderer(new GestionCeldas("numericoINT"));

        
     
        tablaProductos.getTableHeader().setReorderingAllowed(false);
        tablaProductos.setRowHeight(30);
        tablaProductos.setGridColor(new java.awt.Color(0, 0, 0));
        
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_OBSERVAR).setPreferredWidth(30);
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_ELIMINAR).setPreferredWidth(30);
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_CANTIDAD).setPreferredWidth(120);
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_MAS).setPreferredWidth(30);
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_MENOS).setPreferredWidth(30);
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_ID).setPreferredWidth(35);
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_NOMBRE).setPreferredWidth(120);
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_TIPO_PRODUCTO).setPreferredWidth(120);
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_PRECIO_VENTA).setPreferredWidth(100);
        tablaProductos.getColumnModel().getColumn(Utilidades.AGREGAR_VENTA_EXISTENCIA).setPreferredWidth(249);

        JTableHeader jtableHeader = tablaProductos.getTableHeader();
        jtableHeader.setDefaultRenderer(new GestionEncabezadoTabla());
        tablaProductos.setTableHeader(jtableHeader);
        
 
        scrollPaneTablaCatalago.setViewportView(tablaProductos);

    }
    
    private void llenarTablaVenta(){
        clearTable(tablaProductos);
        
        String sql = "CALL sp_consultarDetalleVenta("+venta.getID()+");";
        DefaultTableModel tablaModelo = (DefaultTableModel) tablaProductos.getModel();
        
        tablaProductos.getColumnModel().getColumn(0).setResizable(false);
        tablaProductos.getColumnModel().getColumn(1).setResizable(false);
        tablaProductos.getColumnModel().getColumn(2).setResizable(false);
        tablaProductos.getColumnModel().getColumn(3).setResizable(false);
        tablaProductos.getColumnModel().getColumn(4).setResizable(false);
        tablaProductos.getColumnModel().getColumn(5).setResizable(false);
        
        try {
            resultSet = procedimientosDAO.ejecututarQuery(sql);
            while(resultSet.next()){
                Object[] datos = new Object[6];
                datos[0] = resultSet.getInt(1);
                datos[1] = resultSet.getString(2);
                datos[2] = resultSet.getString(3);
                datos[3] = resultSet.getDouble(4);
                datos[4] = resultSet.getInt(5);
                datos[5] = resultSet.getString(6);
                
                tablaModelo.addRow(datos);
            }
           
        } catch (SQLException ex) {
            new AlertaError(null, rootPaneCheckingEnabled, "Algo salio mal al conectarse con la base de datos :(").setVisible(true);
        }
    }
    
    private void actualizarTablaVenta() {
        
        String[] titulos = new String[6];
        titulos[0] = "Producto ID";
        titulos[1] = "Nombre";
        titulos[2] = "Tipo Producto";
        titulos[3] = "Precio Venta";
        titulos[4] = "Cantidad";
        titulos[5] = "Descripcion";
        
        
        ModeloTabla tabla = new ModeloTabla(titulos);
        tablaProductos.setModel(tabla);
        tablaProductos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        

        tablaProductos.getColumnModel().getColumn(Utilidades.PRODUCTOS_VENTA_ID).setCellRenderer(new GestionCeldas("numericoINT"));
        tablaProductos.getColumnModel().getColumn(Utilidades.PRODUCTOS_VENTA_NOMBRE).setCellRenderer(new GestionCeldas("texto"));
        tablaProductos.getColumnModel().getColumn(Utilidades.PRODUCTOS_VENTA_TIPOPRODUCTO).setCellRenderer(new GestionCeldas("texto"));
        tablaProductos.getColumnModel().getColumn(Utilidades.PRODUCTOS_VENTA_PRECIOVENTA).setCellRenderer(new GestionCeldas("numericoDOUBLE"));
        tablaProductos.getColumnModel().getColumn(Utilidades.PRODUCTOS_VENTA_CANTIDAD).setCellRenderer(new GestionCeldas("numericoINT"));
        tablaProductos.getColumnModel().getColumn(Utilidades.PRODUCTOS_VENTA_DESCRIPCION).setCellRenderer(new GestionCeldas("texto"));

     
        tablaProductos.getTableHeader().setReorderingAllowed(false);
        tablaProductos.setRowHeight(30);
        tablaProductos.setGridColor(new java.awt.Color(0, 0, 0));
        
        tablaProductos.getColumnModel().getColumn(Utilidades.PRODUCTOS_VENTA_ID).setPreferredWidth(70);
        tablaProductos.getColumnModel().getColumn(Utilidades.PRODUCTOS_VENTA_NOMBRE).setPreferredWidth(160);
        tablaProductos.getColumnModel().getColumn(Utilidades.PRODUCTOS_VENTA_TIPOPRODUCTO).setPreferredWidth(140);
        tablaProductos.getColumnModel().getColumn(Utilidades.PRODUCTOS_VENTA_PRECIOVENTA).setPreferredWidth(130);
        tablaProductos.getColumnModel().getColumn(Utilidades.PRODUCTOS_VENTA_CANTIDAD).setPreferredWidth(100);
        tablaProductos.getColumnModel().getColumn(Utilidades.PRODUCTOS_VENTA_DESCRIPCION).setPreferredWidth(264);

        JTableHeader jtableHeader = tablaProductos.getTableHeader();
        jtableHeader.setDefaultRenderer(new GestionEncabezadoTabla());
        tablaProductos.setTableHeader(jtableHeader);
        
 
        scrollPaneTablaCatalago.setViewportView(tablaProductos);

    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private componentes.BotonPersonalizado botonSalir;
    private javax.swing.JLabel etiquetaAgregarProducto;
    private javax.swing.JLabel etiquetaEmpleado;
    private javax.swing.JLabel etiquetaFecha;
    private javax.swing.JLabel etiquetaID;
    private javax.swing.JLabel etiquetaIva;
    private javax.swing.JLabel etiquetaSubtotal;
    private javax.swing.JLabel etiquetaTitulo;
    private javax.swing.JLabel etiquetaTotal;
    private rojerusan.RSPanelImage fotoAgregarProducto;
    private javax.swing.JPanel panelAgregarProducto;
    private javax.swing.JPanel panelContenido;
    private javax.swing.JPanel panelDatosVenta;
    private javax.swing.JPanel panelFondoTitulo;
    private javax.swing.JPanel panleFondo;
    private javax.swing.JScrollPane scrollPaneTablaCatalago;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JLabel txtEmpleado;
    private javax.swing.JLabel txtFecha;
    private javax.swing.JLabel txtID;
    private javax.swing.JLabel txtIva;
    private javax.swing.JLabel txtPrecioSubtotal;
    private javax.swing.JLabel txtPrecioTotal;
    // End of variables declaration//GEN-END:variables
}
