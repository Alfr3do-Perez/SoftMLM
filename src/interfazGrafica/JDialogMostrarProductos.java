/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazGrafica;

import ObjetosNegocio.Producto;
import alarmas.AlertaError;
import componentes.GestionCeldas;
import componentes.GestionEncabezadoTabla;
import componentes.ModeloTabla;
import componentes.Utilidades;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;


/**
 *
 * @author AlfredoPerez
 */
public class JDialogMostrarProductos extends javax.swing.JDialog {

    private final List<Producto> listaProductos;
    private final List<Producto> listaProductosAux;
    private Producto producto;
    
    /**
     * Creates new form JDialogMostrarProductos
     * @param parent
     * @param modal
     * @param listaProductos
     */
    public JDialogMostrarProductos(java.awt.Frame parent, boolean modal, List<Producto> listaProductos) {
        super(parent, modal);
        this.initComponents();
        this.actualizarTablaProductos();
        this.listaProductos = listaProductos;
        this.listaProductosAux = new ArrayList<>();
        this.listaProductosAux.addAll(listaProductos);
        this.llenarTablaProductos(listaProductosAux);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelFondo = new javax.swing.JPanel();
        panelContenidoAdministrarCatalago = new javax.swing.JPanel();
        botonSalir = new componentes.BotonPersonalizado();
        scrollPaneTablaCatalago = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        etiquetaBuscarProducto = new javax.swing.JLabel();
        txtBuscarProducto = new javax.swing.JTextField();
        botonAgregar = new javax.swing.JButton();
        etiquetaCantidad = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JSpinner();
        panelTitulo = new javax.swing.JPanel();
        etiquetaTitulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelFondo.setBackground(new java.awt.Color(204, 204, 204));
        panelFondo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelFondoMousePressed(evt);
            }
        });
        panelFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelContenidoAdministrarCatalago.setBackground(new java.awt.Color(255, 255, 255));
        panelContenidoAdministrarCatalago.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelContenidoAdministrarCatalago.setPreferredSize(new java.awt.Dimension(910, 570));
        panelContenidoAdministrarCatalago.setRequestFocusEnabled(false);
        panelContenidoAdministrarCatalago.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botonSalir.setText("Salir");
        botonSalir.setColorHover(new java.awt.Color(45, 116, 191));
        botonSalir.setColorNormal(new java.awt.Color(58, 103, 201));
        botonSalir.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        botonSalir.setPreferredSize(new java.awt.Dimension(160, 40));
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });
        panelContenidoAdministrarCatalago.add(botonSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 490, -1, -1));

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaProductos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tablaProductos.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tablaProductosMouseMoved(evt);
            }
        });
        tablaProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaProductosMousePressed(evt);
            }
        });
        scrollPaneTablaCatalago.setViewportView(tablaProductos);

        panelContenidoAdministrarCatalago.add(scrollPaneTablaCatalago, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 870, 390));

        etiquetaBuscarProducto.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        etiquetaBuscarProducto.setText("Buscar Producto:");
        panelContenidoAdministrarCatalago.add(etiquetaBuscarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        txtBuscarProducto.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        txtBuscarProducto.setPreferredSize(new java.awt.Dimension(250, 30));
        txtBuscarProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtBuscarProductoMousePressed(evt);
            }
        });
        txtBuscarProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarProductoKeyReleased(evt);
            }
        });
        panelContenidoAdministrarCatalago.add(txtBuscarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, -1, -1));

        botonAgregar.setBackground(new java.awt.Color(0, 204, 51));
        botonAgregar.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        botonAgregar.setForeground(new java.awt.Color(255, 255, 255));
        botonAgregar.setText("Agregar");
        botonAgregar.setBorderPainted(false);
        botonAgregar.setContentAreaFilled(false);
        botonAgregar.setOpaque(true);
        botonAgregar.setPreferredSize(new java.awt.Dimension(160, 40));
        botonAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonAgregarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonAgregarMouseExited(evt);
            }
        });
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });
        panelContenidoAdministrarCatalago.add(botonAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 490, -1, -1));

        etiquetaCantidad.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        etiquetaCantidad.setText("Cantidad:");
        etiquetaCantidad.setVisible(false);
        panelContenidoAdministrarCatalago.add(etiquetaCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 40, -1, -1));

        txtCantidad.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        txtCantidad.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        txtCantidad.setPreferredSize(new java.awt.Dimension(110, 30));
        txtCantidad.setVisible(false);
        panelContenidoAdministrarCatalago.add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 40, -1, -1));

        panelFondo.add(panelContenidoAdministrarCatalago, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, 550));

        panelTitulo.setBackground(new java.awt.Color(255, 255, 255));
        panelTitulo.setPreferredSize(new java.awt.Dimension(100, 50));
        panelTitulo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        etiquetaTitulo.setBackground(new java.awt.Color(0, 0, 0));
        etiquetaTitulo.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        etiquetaTitulo.setText("LISTA PRODUCTOS");
        panelTitulo.add(etiquetaTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        panelFondo.add(panelTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, -1));

        getContentPane().add(panelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 650));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_botonSalirActionPerformed

    private void tablaProductosMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProductosMouseMoved
        
    }//GEN-LAST:event_tablaProductosMouseMoved

    private void tablaProductosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProductosMousePressed
        if(tablaProductos.getSelectedRow() != -1){
            txtCantidad.setValue(1);
            etiquetaCantidad.setVisible(true);
            txtCantidad.setVisible(true);
        }
        else{
            etiquetaCantidad.setVisible(false);
            txtCantidad.setVisible(false);
        }              
    }//GEN-LAST:event_tablaProductosMousePressed

    private void botonAgregarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAgregarMouseEntered
        botonAgregar.setBackground(new Color(51,255,0));
    }//GEN-LAST:event_botonAgregarMouseEntered

    private void botonAgregarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAgregarMouseExited
        botonAgregar.setBackground(new Color(0,204,51));
    }//GEN-LAST:event_botonAgregarMouseExited

    private void panelFondoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelFondoMousePressed
        tablaProductos.clearSelection();
        if(tablaProductos.getSelectedRow() != -1){
            txtCantidad.setValue(1);
            etiquetaCantidad.setVisible(true);
            txtCantidad.setVisible(true);
        }
        else{
            etiquetaCantidad.setVisible(false);
            txtCantidad.setVisible(false);
        } 
    }//GEN-LAST:event_panelFondoMousePressed

    private void txtBuscarProductoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarProductoKeyReleased
        listaProductosAux.clear();
        if(!"".equals(txtBuscarProducto.getText())){
            for(int cont=0; cont < listaProductos.size() ;cont++ ){
               if(listaProductos.get(cont).getNombre().startsWith(txtBuscarProducto.getText())){
                   listaProductosAux.add(listaProductos.get(cont));
               }
            }
            llenarTablaProductos(listaProductosAux);
        }
        else{
           listaProductosAux.addAll(listaProductos);
          llenarTablaProductos(listaProductosAux);  
        }
    }//GEN-LAST:event_txtBuscarProductoKeyReleased

    public Producto getProducto() {
        return producto;
    }

    public void setProducto(Producto producto) {
        this.producto = producto;
    }

    public JSpinner getTxtCantidad() {
        return txtCantidad;
    }

    public void setTxtCantidad(JSpinner txtCantidad) {
        this.txtCantidad = txtCantidad;
    }

    

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
        if((int)txtCantidad.getValue() != 0 && tablaProductos.getSelectedRow() != -1){
           if(listaProductosAux.get(tablaProductos.getSelectedRow()).getExistencia() >= (int)txtCantidad.getValue()){
               producto = listaProductosAux.get(tablaProductos.getSelectedRow());
               if(listaProductos.contains(producto)){
                   for(int cont = 0; cont < listaProductos.size(); cont++){
                       if(listaProductos.get(cont).equals(producto)){
                           listaProductos.get(cont).setExistencia(listaProductos.get(cont).getExistencia()-(int)txtCantidad.getValue());
                           this.dispose();
                       }
                   }
               }
           }
           else{
               new AlertaError(null, rootPaneCheckingEnabled, "El producto no tiene suficiente existencia!").setVisible(true);
           }
       } 
       else{
           new AlertaError(null, rootPaneCheckingEnabled, "La cantidad tiene que ser mayor a '0'").setVisible(true);
       }
    }//GEN-LAST:event_botonAgregarActionPerformed

    
    
    private void txtBuscarProductoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarProductoMousePressed
        tablaProductos.clearSelection();
        if(tablaProductos.getSelectedRow() != -1){
            txtCantidad.setValue(1);
            etiquetaCantidad.setVisible(true);
            txtCantidad.setVisible(true);
        }
        else{
            etiquetaCantidad.setVisible(false);
            txtCantidad.setVisible(false);
        }
    }//GEN-LAST:event_txtBuscarProductoMousePressed

    public void clearTable(JTable tabla) {
        
        while(tabla.getRowCount() > 0){
            ((DefaultTableModel) tabla.getModel()).removeRow(0);
        }
    }
    
    private void llenarTablaProductos(List<Producto> listaProductos){
        clearTable(tablaProductos);
        DefaultTableModel tablaModelo = (DefaultTableModel) tablaProductos.getModel();
        
        tablaProductos.getColumnModel().getColumn(0).setResizable(false);
        tablaProductos.getColumnModel().getColumn(1).setResizable(false);
        tablaProductos.getColumnModel().getColumn(2).setResizable(false);
        tablaProductos.getColumnModel().getColumn(3).setResizable(false);
        tablaProductos.getColumnModel().getColumn(4).setResizable(false);
        tablaProductos.getColumnModel().getColumn(5).setResizable(false);
        tablaProductos.getColumnModel().getColumn(6).setResizable(false);
        for (Producto listaProducto : listaProductos) {
            Object[] datos = new Object[7];
            datos[0] = "OBSERVAR";
            datos[1] = listaProducto.getID();
            datos[2] = listaProducto.getNombre();
            datos[3] = listaProducto.getTipoProducto();
            datos[4] = listaProducto.getPrecio();
            datos[5] = listaProducto.getExistencia();
            datos[6] = listaProducto.getDescripcion();
            tablaModelo.addRow(datos);
        }
        
    }
    
    
    private void actualizarTablaProductos() {
        
        String[] titulos = new String[7];
        titulos[0] = "";
        titulos[1] = "ID";
        titulos[2] = "Nombre";
        titulos[3] = "Tipo Producto";
        titulos[4] = "Precio Venta";
        titulos[5] = "Existencia";
        titulos[6] = "Descripcion";
        
        tablaProductos.setModel(new ModeloTabla(titulos));
        tablaProductos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tablaProductos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        tablaProductos.getColumnModel().getColumn(Utilidades.OBSERVAR).setCellRenderer(new GestionCeldas("icono"));
        tablaProductos.getColumnModel().getColumn(1).setCellRenderer(new GestionCeldas("numericoINT"));
        tablaProductos.getColumnModel().getColumn(2).setCellRenderer(new GestionCeldas("texto"));
        tablaProductos.getColumnModel().getColumn(3).setCellRenderer(new GestionCeldas("texto"));
        tablaProductos.getColumnModel().getColumn(4).setCellRenderer(new GestionCeldas("numericoDOUBLE"));
        tablaProductos.getColumnModel().getColumn(5).setCellRenderer(new GestionCeldas("numericoINT"));
        tablaProductos.getColumnModel().getColumn(6).setCellRenderer(new GestionCeldas("texto"));

     
        tablaProductos.getTableHeader().setReorderingAllowed(false);
        tablaProductos.setRowHeight(30);
        tablaProductos.setGridColor(new java.awt.Color(0, 0, 0));
        
        tablaProductos.getColumnModel().getColumn(Utilidades.OBSERVAR).setPreferredWidth(30);
        tablaProductos.getColumnModel().getColumn(1).setPreferredWidth(35);
        tablaProductos.getColumnModel().getColumn(2).setPreferredWidth(120);
        tablaProductos.getColumnModel().getColumn(3).setPreferredWidth(120);
        tablaProductos.getColumnModel().getColumn(4).setPreferredWidth(100);
        tablaProductos.getColumnModel().getColumn(5).setPreferredWidth(100);
        tablaProductos.getColumnModel().getColumn(6).setPreferredWidth(359);

        JTableHeader jtableHeader = tablaProductos.getTableHeader();
        jtableHeader.setDefaultRenderer(new GestionEncabezadoTabla());
        tablaProductos.setTableHeader(jtableHeader);

        scrollPaneTablaCatalago.setViewportView(tablaProductos);

    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private componentes.BotonPersonalizado botonSalir;
    private javax.swing.JLabel etiquetaBuscarProducto;
    private javax.swing.JLabel etiquetaCantidad;
    private javax.swing.JLabel etiquetaTitulo;
    private javax.swing.JPanel panelContenidoAdministrarCatalago;
    private javax.swing.JPanel panelFondo;
    private javax.swing.JPanel panelTitulo;
    private javax.swing.JScrollPane scrollPaneTablaCatalago;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTextField txtBuscarProducto;
    private javax.swing.JSpinner txtCantidad;
    // End of variables declaration//GEN-END:variables
}
